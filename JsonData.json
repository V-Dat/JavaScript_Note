{
    "mainContent": "<h3>String :</h3>\n- String Object Wrapper \n- String Constructor \n\n<h3>Yeild :</h3>\n- Yeild là từ khóa dùng để tạm dừng và cũng để tiếp tục việc thực thi bên trong <b>generator function</b> hay <b>iteration</b>.\n\n\n\n<hr>\n<h3><a href=\"https://tc39.es/ecma262/multipage/text-processing.html#sec-string-objects\">ECMAScript Language Specification :\n<br><small># sec-string-objects</small></a>\n</h3>\n",
    "methodHelper": [
        {
            "method": "<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length\" aria-current=\"page\">Length Property</a>",
            "syntax": "<pre><code class=\"hljs language-cpp\">\n<span class=\"hljs-type\">const</span> example = <span class=\"hljs-string\">\"Example String\"</span>\nexample.length === <span class=\"hljs-number\">14</span> <span class=\"hljs-comment\">// return number 14</span>\n\n<span class=\"hljs-type\">const</span> emoji = <span class=\"hljs-string\">\"😄\"</span>;\nemoji.length === <span class=\"hljs-number\">2</span> <span class=\"hljs-comment\">// return number 2 cause 😄 is not UTF-16</span>\nemoji.lenght !== [...emoji].length  <span class=\"hljs-comment\">// false -> 2 !== 1</span>\n\n</code></pre>",
            "equal": "<pre><code class=\"hljs language-cpp\">\n<span class=\"hljs-type\">const</span> example = <span class=\"hljs-string\">\"Example String\"</span>\nexample.length === <span class=\"hljs-number\">14</span> <span class=\"hljs-comment\">// return number 14</span>\n<span class=\"hljs-type\">const</span> newArray = [...example] <span class=\"hljs-comment\">// spread syntax </span>\nnewArray.length === <span class=\"hljs-number\">14</span> <span class=\"hljs-comment\">// return number 14</span>\n</code></pre>\n\nsee bellow: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax</a>",
            "description": "- The length read-only property of a string contains the length of the string in UTF-16 code units. Length là thuộc tính chỉ đọc thể hiện chuỗi ở đơn vị mã UTF-16. Chỉ đọc tức là chúng ta vẫn có thể truy cập tuy nhiên không sửa xóa được.<br>\n- Writable : no <br>\n- Enumerable : no <br>\n- Configurable : no <br>\n\n- <a href=\"https://tc39.es/ecma262/multipage/text-processing.html#sec-properties-of-string-instances-length\">The number of elements in the String value represented by this String object. Once a String object is initialized, this property is unchanging. It has the attributes { [[Writable]]: false, [[Enumerable]]: false, [[Configurable]]: false }.</a> <br>\n. Throw error in <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode\">strict mode</a> if override length.\n\n<pre><code class=\"hljs language-cpp\">\n<span class=\"hljs-type\">const</span> myString = <span class=\"hljs-string\">\"bluebells\"</span>; \nmyString.length === <span class=\"hljs-number\">9</span> <span class=\"hljs-comment\">// before try to overide length</span>\nmyString.length = <span class=\"hljs-number\">4</span>; <span class=\"hljs-comment\">// try to overide length => fail </span>\nmyString.length === <span class=\"hljs-number\">9</span> <span class=\"hljs-comment\">// still return number 9 \"bluebells\".length</span>\n</code></pre>\n\n\n",
            "index": 0
        },
        {
            "method": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at\">at()</a>",
            "syntax": "[😄,😠,🔴,⏺].at(1) => return 😠 ",
            "equal": "[ 😄, 😠 , 🔴 , ⏺ ][1]",
            "description": "- At aceept both positive and number \n- <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors#bracket_notation\" title=\"Permalink to Bracket notation\">Bracket notation</a>   \n- Property accessors",
            "index": 1
        },
        {
            "method": "<a href=\"https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Global_Objects/String/@@iterator\" aria-current=\"page\">String.prototype[@@iterator]()</a>",
            "syntax": "string[Symbol.iterator]() return <b>iterator</b>\n<hr>\nconst str = 'Example String';\n\nconst iterator = str[Symbol.iterator]();\nlet theChar = iterator.next();\n\nwhile (!theChar.done && theChar.value !== ' ') {\n  console.log(theChar.value);\n  theChar = iterator.next();\n}\n\n***\n\n\n",
            "equal": "1. Iterator Object là object Built-in <b>iterator protocol</b>",
            "description": "<a href=\"https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">- 1. iterable protocol</a>\n<a href=\"https://developer.mozilla.org//en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">- 2. iterable</a>",
            "index": 2
        }
    ]
}