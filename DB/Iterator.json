{
    "documentTitle": "Iterators & Generators | Note",
    "headingMethodHelper": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">Iterators and generators</a>",
    "mainContent": "<!-- ================================ 0 . Content ================================ -->\n<h3>Content</h3>\n- <a href=\"#1\">1. Keyed Collections</a> <br>\n- <a href=\"#2\">2. Map - Keyed Collections</a> <br>\n\n\n\n<!-- ================================ 1 . Iterators and generators  ================================ -->\n\n<h3><a href=\"\">1. Iterators and generators</a></h3>\n- Iterators và generators được xây dựng bên trong Core-Language, cung cấp cơ chế để tùy biến vòng lặp như <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a> <br>\n\n- Iterator là một object mà bên trong nó được xây dựng <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterator_protocol\">iterator protocol</a>, có phương thức next, iterator gọi phương thức next trả về value: The next value in the iteration và done : true/ false  <br>\n\n- Tạo ra một Object Iterator bằng cách sử dụng phương thức [Symbol.iterator]() <br>\n\n\n<!-- ================================ 2. Iterable ================================ -->\n\n<h3><a href=\"\">2. What is Iterable ?</a></h3>\n- Iterable : An Object is iterable if that Object implement the <b style=\"color:red\">@@iterator method</b>. This means (or one of the objects up its <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">prototype chain</a>) must have a property with a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\">Symbol.iterator</a> key. <br>\n\n\n- <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a> are all built-in iterables, because their prototype objects all have a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\">Symbol.iterator</a> method.\n<br>\n\n<!-- ================================ 3. Itrator ================================ -->\n\n<h3><a href=\"\">3. What is Iterator?</a></h3>\n\nAn Iterator is any Object which implements the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterator_protocol\">Iterator protocol</a> by having a next() method that returns an object with two properties:<br>\n\n- <b>value</b>: The next value in the iteration sequence. <br>\n- <b>done</b>: This is true if the last value in the sequence has already been consumed. If value is present alongside done, it is the iterator's return value.<br>\n\n<pre><code class=\"javascript\">// Example iterator \nconst array = [1,2,3,4,5,6]; // Array is an object built-in iterables\nconst iterator = array[Symbol.iterator]() // Create iterator object by using method [Symbol.iterator]\nconsole.log( iterator ) ; // Array Iterator {}\nconsole.log( iterator.next() ) ; // {value: 1, done: false}\nconsole.log( iterator.next() ) ; // {value: 2, done: false}\nconsole.log( iterator.next() ) ; // {value: 3, done: false}\nconsole.log( iterator.next() ) ; // {value: 4, done: false}\nconsole.log( iterator.next() ) ; // {value: 5, done: false}\nconsole.log( iterator.next() ) ; // {value: 6, done: false}\nconsole.log( iterator.next() ) ; // {value: undefined, done: true}\n</code></pre>\n\n\n<br>\n\n<!-- ================================ 4. What is Generator ? ================================ -->\n\n<h3><a href=\"\">4. What is Generator ?</a></h3>\n\nThe Generator object is returned by a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\">Generator function</a> and it conforms to both the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">iterable protocol</a> and the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterator_protocol\">iterator protocol</a>.\n<br>\n\n<pre><code class=\"javascript\">//1 - Example Create Generator\nfunction * createGenerator() {\n  yield 1;\n  yield 2;\n  yield 3;\n  return \"finished\";\n}\n\nconst generator = createGenerator();\nconsole.log( generator.next() ); // {value: 1, done: false}\nconsole.log( generator.next() ); // {value: 2, done: false}\nconsole.log( generator.next() ); // {value: 3, done: false}\nconsole.log( generator.next() ); // {value: \"finished\", done: true}\nconsole.log( generator.next() ); // {value: undefined, done: true}\nconsole.log( generator.next() ); // {value: undefined, done: true}\n\n//2 - Example Create Generator \nfunction * createGenerator(arr) {\n    let start = 0 ;\n    while(start < arr.length){\n        yield arr[start];\n        start++\n    }\n}\n\nconst generator = createGenerator([1,2,3])\nconsole.log( generator.next() ); // {value: 1, done: false}\nconsole.log( generator.next() ); // {value: 2, done: false}\nconsole.log( generator.next() ); // {value: 3, done: false}\nconsole.log( generator.next() ); // {value: undefined, done: true}\nconsole.log( generator.next() ); // {value: undefined, done: true}\nconsole.log( generator.next() ); // {value: undefined, done: true}\n</code></pre>\n\n\n<!-- ================================ 5. Generator Object ? ================================ -->\n\n<h3><a href=\"\">5. Generator Object ?</a></h3>\n\n- Generator Object was created by Generator Function. <br>\n <details>\n <summary>Generator Object inherit Prototype methods</summary>\n <ol>\n <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next\" >Generator.prototype.next()</a></li>\n <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return\" >Generator.prototype.return()</a></li>\n <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/throw\" >Generator.prototype.throw()</a></li>\n </ol>\n </details>\n\n\n\n\n<!-- ================================ 6. Make Range Iterator ================================ -->\n\n<h3><a href=\"\">6. Make Range Iterator</a></h3>\n<pre><code class=\"javascript\">//1 - Example range iterator by Closures\nfunction makeRangeIterator(start = 0, end = Infinity, step = 1) {\n  let nextIndex = start;\n  let iterationCount = 0;\n\n  const rangeIterator = {\n    next() {\n      let result;\n      if (nextIndex <= end) {\n        result = { value: nextIndex, done: false };\n        nextIndex += step;\n        iterationCount++;\n        return result;\n      }\n      return { value: undefined , done: true };\n    }\n  };\n  return rangeIterator;\n}\n\nconst it = makeRangeIterator(1, 6, 1);\n\nconsole.log(it.next()); // {value: 1, done: false}\nconsole.log(it.next()); // {value: 2, done: false}\nconsole.log(it.next()); // {value: 3, done: false}\nconsole.log(it.next()); // {value: 4, done: false}\nconsole.log(it.next()); // {value: 5, done: false}\nconsole.log(it.next()); // {value: 6, done: false}\nconsole.log(it.next()); // {value: undefined, done: true}\nconsole.log(it.next()); // {value: undefined, done: true}\nconsole.log(it.next()); // {value: undefined, done: true}\nconsole.log(it.next()); // {value: undefined, done: true}\n\n//2 - Make Range Iterator by function Generator\nfunction* makeRangeIterator(start = 0, end = Infinity, step = 1) {\n  let iterationCount = 0;\n  for (let i = start; i < end; i += step) {\n    iterationCount++;\n    yield i;\n  }\n  return iterationCount;\n}\n\nconst itGenerator = makeRangeIterator(1, 6, 1);\n\nconsole.log(itGenerator.next()); // {value: 1, done: false}\nconsole.log(itGenerator.next()); // {value: 2, done: false}\nconsole.log(itGenerator.next()); // {value: 3, done: false}\nconsole.log(itGenerator.next()); // {value: 4, done: false}\nconsole.log(itGenerator.next()); // {value: 5, done: false}\nconsole.log(itGenerator.next()); // {value: 6, done: false}\nconsole.log(itGenerator.next()); // {value: undefined, done: true}\nconsole.log(itGenerator.next()); // {value: undefined, done: true}\nconsole.log(itGenerator.next()); // {value: undefined, done: true}\nconsole.log(itGenerator.next()); // {value: undefined, done: true}\n</code></pre>\n",
    "headingMainContent": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">Iterators and generators</a>",
    "dataTable": {
        "dataTableHeader": [
            {
                "data": "STT",
                "name": "STT",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 0
            },
            {
                "data": "Method Name",
                "name": "Method Name",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 1
            },
            {
                "data": "Syntax",
                "name": "Syntax",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 2
            },
            {
                "data": "Involved",
                "name": "Involved",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 3
            },
            {
                "data": "Description",
                "name": "Description",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 4
            },
            {
                "data": "Action",
                "name": "Action",
                "actionSrc": null,
                "index": 5
            }
        ],
        "dataTableFirstRow": [
            {
                "name": "stt",
                "data": "0",
                "index": 0
            },
            {
                "name": "method",
                "data": "<textarea></textarea>",
                "index": 1
            },
            {
                "name": "syntax",
                "data": "<textarea></textarea>",
                "index": 2
            },
            {
                "name": "involved",
                "data": "<textarea></textarea>",
                "index": 3
            },
            {
                "name": "description",
                "data": "<textarea></textarea>",
                "index": 4
            },
            {
                "name": "action",
                "data": null,
                "index": 5
            }
        ],
        "dataTableBody": [
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>\n\n\n<span style=\"color:red\">Lưu ý đây là property</span>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>\n\n\n- <span style=\"color:red\">Lưu ý đây là property</span>, Không phải method <br>\n\n- Sử dụng <b style=\"color:navy\">forEach</b> <b style=\"color:red\">trong Algorithm</b>",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>\n\n- The size method returns the number of elements in a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map object</a>. <br>\n- The size method is just readOnly, do not writable and changable\n\n\n<!-- ==== Đặc tả ==== -->\n\n<br>\n<h3 style=\"color:red\">Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-get-map.prototype.size'>Map.prototype.size</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre><code class=\"javascript\">\n1. Let M be the this value.\n2. Perform ? RequireInternalSlot(M, [[MapData]]).\n3. Let entries be the List that is M.[[MapData]].\n4. Let count be 0.\n5. For each Record { [[Key]], [[Value]] } p of entries, do\n🦊 a. If p.[[Key]] is not empty, set count to count + 1.\n6. Return 𝔽(count).\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next\" >Generator.prototype.next()</a></h3>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next\" >Generator.prototype.next()</a></h3>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next\" >Generator.prototype.next()</a></h3>",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next\" >Generator.prototype.next()</a></h3>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return\" >Generator.prototype.return()</a></h3>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return\" >Generator.prototype.return()</a></h3>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return\" >Generator.prototype.return()</a></h3>",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return\" >Generator.prototype.return()</a></h3>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/throw\" >Generator.prototype.throw()</a></h3>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/throw\" >Generator.prototype.throw()</a></h3>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/throw\" >Generator.prototype.throw()</a></h3>",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": " <h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/throw\" >Generator.prototype.throw()</a></h3>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ]
        ]
    },
    "referanceContent": "<ol>\n    <li><a href=\"https://dev.to/carlillo/understanding-iterator-pattern-in-javascript-typescript-using-symbol-iterator-a19\">Understanding Iterator</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript\">Javascript on Mozilla</a></li>\n    <li><a href=\"https://stephengrider.github.io/JSPlaygrounds/\">Playgrounds</a></li>\n</ol>\n    "
}