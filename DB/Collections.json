{
    "mainContent": "<!-- ================================ 0 . Content ================================ -->\n<h3>Content</h3>\n- <a href=\"#1\">1. Keyed Collections</a> <br>\n- <a href=\"#2\">2. Map - Keyed Collections</a> <br>\n- <a href=\"#3\">3. Set - Keyed Collections</a> <br>\n- <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">4. WeakMap - Keyed Collections</a> <br>\n- <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">5. WeakSet - Keyed Collections</a> <br>\n\n\n<!-- ================================ 1 . Keyed Collections  ================================ -->\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects#keyed_collections\">1. Keyed Collections</a></h3>\n- These objects represent collections which use keys. The iterable collections (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\"><code>Map</code></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\"><code>Set</code></a>) contain elements which are easily iterated in the order of insertion. <br>\n\n\n<!-- ================================ 2 . Map - Keyed Collections  ================================ -->\n\n<h3 id=\"2\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">2. Map - Keyed Collections</a></h3>\n\n- Map trong JavaScript là một cấu trúc dữ liệu cho phép lưu trữ dữ liệu theo kiểu key-value, tương tự như object. Tuy nhiên, chúng khác nhau ở chỗ là: <br>\n🦊 Object chỉ cho phép sử dụng <b  class='red'>String</b> hay <b  class='red'>Symbol</b> làm key. <br>\n🦊 Map cho phép mọi kiểu dữ liệu <b  class='red'>(String, Number, Boolean, NaN, Object,...)</b> có thể làm key. <br>\n🦊 Mỗi phần tử của kiểu dữ liệu map sẽ ở dưới dạng [key, value], Trong kiểu dữ liệu Map, Key giống như id chỉ tồn tại duy nhất. Khi chúng ta cố tình khởi tạo hay set trùng, thi nó sẽ override phần tử cũ. Tuy nhiên nó vẫn giữ lại thứ tự khởi tạo.\n<!-- ================================ 2.1 . Map Constructor ================================ -->\n<h4><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/Map\">2.1 Map Constructor</a></h4>\n<pre class='js'><code>new Map(iterable)</code></pre>\nNote: Map() can only be constructed with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new\">new</a>. Attempting to call it without new throws a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a>. <br>\n\n<pre class='js'><code  class=\"javascript\">// Example new Map\nconst mapObject = new Map([[\"1\",\"aa\"],[1,\"aa\"],[1,\"aa\"],]) // Map(2) {'1' => 'aa', 1 => 'aa'}\n\nmapObject.set(333, 444)\nmapObject.forEach((value,key) => console.log(value, key));  // Lưu ý value sẽ là giá trị đầu tiên trong method forEach\n</code></pre>\n\n\n<!-- ================================ 2.2 . Map Property and Map Method ================================ -->\n\n\n<details>\n    <summary  class='purple' ><b>2.1 MAP PROPERTIES</b></summary>\n    <ol>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@species\" aria-current=\"page\">get Map[@@species]</a></li>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" >Map.prototype.size</a></li>\n    </ol>\n</details>\n\n<details>\n  <summary  class='purple' ><b>2.2 MAP METHOD</b></summary>\n  <ol>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">Map.prototype[@@iterator]()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\">Map.prototype.clear()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\">Map.prototype.delete()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">Map.prototype.entries()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\">Map.prototype.forEach()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\">Map.prototype.get()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\">Map.prototype.has()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">Map.prototype.keys()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set\">Map.prototype.set()</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">Map.prototype.values()</a></li>\n  </ol>\n</details>\n\n\n\n\n\n<!-- ================================ 3 . Set - Keyed Collections  ================================ -->\n\n<h3 id=\"3\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\">3. Set - Keyed Collections</a></h3>\n- Đối tượng Set cho phép bạn lưu trữ các giá trị duy nhất thuộc bất kỳ kiểu nào, cho dù là giá trị nguyên thủy hay tham chiếu đối tượng. <br>\n- The Set object lets you store unique values of any type, whether <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Primitive\">primitive values</a> or object references. <br>\n\n\n\n\n<!-- ================================ 3.1 . Set Constructor ================================ -->\n<h4><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/Set\">3.1 Set Constructor</a></h4>\n<pre class='js'><code>new Set(iterable)</code></pre>\nNote: Set() can only be constructed with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new\">new</a>. Attempting to call it without new throws a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a>. <br>\n\n<pre class='js'><code  class=\"javascript\">// Example new Set\nconst setObject = new Set([1, 2, 3, 4, 5, 1, 2, 3]); // Set(5) {1, 2, 3, 4, 5}\n\nconsole.log(setObject.has(1));// true\nconsole.log(setObject.has(5));// true\nconsole.log(setObject.has(6// false</code></pre> \n\n\n\n\n<!-- ================================ 3.2 . Set Property and Map Method ================================ -->\n\n<details>\n      <summary  class='purple' ><b>3.2 SET - PROPERTIES</b></summary>\n      <ol>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@species\" >get Set[@@species]</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/size\" >Set.prototype.size</a></li>\n      </ol>\n</details>\n\n<details>\n      <summary  class='purple' ><b>3.3 SET - METHOD</b></summary>\n      <ol>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\" >Set.prototype[@@iterator]()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/add\" >Set.prototype.add()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear\" >Set.prototype.clear()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete\" >Set.prototype.delete()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\" >Set.prototype.entries()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach\" >Set.prototype.forEach()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has\" >Set.prototype.has()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\" >Set.prototype.keys()</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></li>\n      </ol>\n</details>\n\n\n",
    "dataTable": {
        "dataTableHeader": [
            {
                "data": "STT",
                "name": "STT",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 0
            },
            {
                "data": "Method Name",
                "name": "Method Name",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 1
            },
            {
                "data": "Syntax",
                "name": "Syntax",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 2
            },
            {
                "data": "Involved",
                "name": "Involved",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 3
            },
            {
                "data": "Description",
                "name": "Description",
                "actionSrc": "./Assets/Icons/plus-icon.svg",
                "index": 4
            },
            {
                "data": "Action",
                "name": "Action",
                "actionSrc": null,
                "index": 5
            }
        ],
        "dataTableFirstRow": [
            {
                "name": "stt",
                "data": "0",
                "index": 0
            },
            {
                "name": "method",
                "data": "<textarea></textarea>",
                "index": 1
            },
            {
                "name": "syntax",
                "data": "<textarea></textarea>",
                "index": 2
            },
            {
                "name": "involved",
                "data": "<textarea></textarea>",
                "index": 3
            },
            {
                "name": "description",
                "data": "<textarea></textarea>",
                "index": 4
            },
            {
                "name": "action",
                "data": null,
                "index": 5
            }
        ],
        "dataTableBody": [
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>\n\n\n<b class='red'>Lưu ý đây là property</b>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>\n\n\n- <b class='red'>Lưu ý đây là property</b>, Không phải method <br>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b>",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\" aria-current=\"page\">Map.prototype.size</a></h3>\n\n- The size method returns the number of elements in a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map object</a>. <br>\n- The size method is just readOnly, do not writable and changable\n\n\n<!-- ==== Đặc tả ==== -->\n\n<br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-get-map.prototype.size'>Map.prototype.size</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value.\n2. Perform ? RequireInternalSlot(M, [[MapData]]).\n3. Let entries be the List that is M.[[MapData]].\n4. Let count be 0.\n5. For each Record { [[Key]], [[Value]] } p of entries, do\n🦊 a. If p.[[Key]] is not empty, set count to count + 1.\n6. Return 𝔽(count).\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/size\" aria-current=\"page\">Set.prototype.size</a></h3>\n\n\n<b class='red'>Lưu ý đây là property</b>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/size\" aria-current=\"page\">Set.prototype.size</a></h3>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/size\" aria-current=\"page\">Set.prototype.size</a></h3>\n\n\n\n- <b class='red'>Lưu ý đây là property</b>, Không phải method <br>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b>",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/size\" aria-current=\"page\">Set.prototype.size</a></h3>\n\n- The size method returns the number of elements in a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set Object</a>. <br>\n- The size method is just readOnly, do not writable and changable\n\n\n<!-- ==== Đặc tả ==== -->\n\n<br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-get-set.prototype.size'>Set.prototype.size</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let S be the this value.\n2. Perform ? RequireInternalSlot(S, [[SetData]]).\n3. Let entries be the List that is S.[[SetData]].\n4. Let count be 0.\n5. For each element e of entries, do\n🦊 a. If e is not empty, set count to count + 1.\n6. Return 𝔽(count).\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set\">Map.prototype.set()</a> </h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set\">Map.prototype.set()</a> </h3>\n\ncaller.set(key, value) <br>\n- The key of the element to add to the Map object. The key may be any <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures\">JavaScript type</a> (any <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#primitive_values\">primitive value</a> or any type of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects\">JavaScript object</a>).<br>\n- The value of the element to add to the Map object. The value may be any <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures\">JavaScript type</a> (any <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#primitive_values\">primitive value</a> or any type of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects\">JavaScript object</a>).<br>\n- Return Map Object \n<pre class='js'><code>\nconst mapObject = new Map();\nmyMap.set('bar', 'foo')\n  .set(1, 'foobar')\n  .set(2, 'baz');\n\nconsole.log(myMap.get(1)); // foobar\nconsole.log(myMap.get(2)); // baz\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set\">Map.prototype.set()</a> </h3>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b>\n- Phương thức set() hay ở một điểm là nó sẽ return lại chính object set đó. Áp dụng được <a href=\"https://en.wikipedia.org/wiki/Method_chaining#:~:text=Method%20chaining%2C%20also%20known%20as,to%20store%20the%20intermediate%20results.\">Method Chaining</a> <br>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b>\n\n\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set\">Map.prototype.set()</a> </h3>\n- The set() method adds or updates an entry in a Map object with a specified key and a value. <br>\n- Phương thức set() thêm hoặc cập nhật Map Object với đối số là key và value <br>\n- <b  class='red'>caller.set(key,value)</b> => Return caller <br>\n<!-- ==== Đặc tả ==== -->\n\n<br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.set'>Map.prototype.set(key,value)</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value.\n2. Perform ? RequireInternalSlot(M, [[MapData]]).\n3. Let entries be the List that is M.[[MapData]].\n4. For each Record { [[Key]], [[Value]] } p of entries, do\n🦊 a. If p.[[Key]] is not empty and SameValueZero(p.[[Key]], key) is true, then\n🦊🦊 i. Set p.[[Value]] to value.\n🦊🦊 ii. Return M.\n5. If key is -0𝔽, set key to +0𝔽.\n6. Let p be the Record { [[Key]]: key, [[Value]]: value }.\n7. Append p to entries.\n8. Return M.\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/add\" >Set.prototype.add()</a></h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/add\" >Set.prototype.add()</a></h3>\n",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/add\" >Set.prototype.add()</a></h3>\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/add\" >Set.prototype.add()</a></h3>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\">Map.prototype.get()</a> </h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\">Map.prototype.get()</a> </h3>\n\n<pre class='js'><code  class=\"javascript\">\nlet arr = [];\nconst mapObject = new Map([['la','ka'],['sa','pa']]);\nmyMap.set('bar', arr);\nmyMap.get('bar').push('foo');\narr = []; // tại sao re-assign ở đây không ảnh hưởng đến element [ 'bar',['foo'] ]\nconsole.log(1, arr); // []\nconsole.log(2, myMap.get('bar')); // [\"foo\"]\nconsole.log(3, myMap); // Map(3) {'la' => 'ka', 'sa' => 'pa', 'bar' => Array(1)}\n\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\">Map.prototype.get()</a> </h3>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b> ",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\">Map.prototype.get()</a> </h3>\n\n- The element associated with the specified key, or undefined if the key can't be found in the Map object. <br>\n- Phương thức get(argkey) trả về phần tử có key === argument key, nếu không thì sẽ return undefined. <br>\n\n<!-- ==== Đặc tả ==== -->\n\n<br><br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.get'>Map.prototype.get(key)</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code>\n1. Let M be the this value.\n2. Perform ? RequireInternalSlot(M, [[MapData]]).\n3. Let entries be the List that is M.[[MapData]].\n4. For each Record { [[Key]], [[Value]] } p of entries, do\n🦊 a. If p.[[Key]] is not empty and SameValueZero(p.[[Key]], key) is true, return p.[[Value]].\n5. Return undefined.\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\">Map.prototype.has()</a> </h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\">Map.prototype.has()</a> </h3>\n\n<pre class='js'><code>\nconst mapObject = new Map();\nmyMap.set(\"bar\", \"foo\");\nconsole.log(myMap.has(\"bar\")); // true\nconsole.log(myMap.has(\"baz\")); // false\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\">Map.prototype.has()</a> </h3>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b> ",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\">Map.prototype.has()</a> </h3>\n\n- Phương thức has(argkey) return true or false chỉ ra rằng caller có tồn tại phần tử key === argkey không <br>\n- The has() method returns a boolean indicating whether an element with the specified key exists or not. <br>\n\n\n\n<!-- ==== Đặc tả ==== -->\n\n<br><br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.has'>Map.prototype.has(key)</a></h3><br>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value.\n2. Perform ? RequireInternalSlot(M, [[MapData]]).\n3. Let entries be the List that is M.[[MapData]].\n4. For each Record { [[Key]], [[Value]] } p of entries, do\n🦊 a. If p.[[Key]] is not empty and SameValueZero(p.[[Key]], key) is true, return true.\n5. Return false.\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has\" >Set.prototype.has()</a></h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has\" >Set.prototype.has()</a></h3>\n",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has\" >Set.prototype.has()</a></h3>\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has\" >Set.prototype.has()</a></h3>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\" aria-current=\"page\">Map.prototype.clear()</a> </h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\" aria-current=\"page\">Map.prototype.clear()</a> </h3>\n\n<pre class='js'><code>\nconst mapObject = new Map();\nmapObject.set('bar', 'baz');\nmapObject.set(1, 'foo');\nconsole.log(mapObject.size); // expected output: 2\nmapObject.clear();\nconsole.log(mapObject.size); // expected output: 0\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<!-- ==== Đặc tả ==== -->\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.clear'>Map.prototype.clear()</a></h3>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b> <br>\n- Tại sao không sử dụng while i < size\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\" aria-current=\"page\">Map.prototype.clear()</a> </h3>\n\n- Phương thức clear: sử dụng để xóa hết các phần tử bên trong đối tượng Map, và trả về undefined\n\n<!-- ==== Đặc tả ==== -->\n\n<br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.clear'>Map.prototype.clear()</a></h3>\n\n<!-- ==== Algorithm -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value.<br>\n2. Perform ? RequireInternalSlot(M, [[MapData]]).<br>\n3. Let entries be the List that is M.[[MapData]].<br>\n4. For each Record { [[Key]], [[Value]] } p of entries, do.<br>\n🦊 a. Set p.[[Key]] to empty.<br>\n🦊 b. Set p.[[Value]] to empty.<br>\n5. Return undefined.<br>\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear\" >Set.prototype.clear()</a></h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear\" >Set.prototype.clear()</a></h3>\n",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear\" >Set.prototype.clear()</a></h3>\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear\" >Set.prototype.clear()</a></h3>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\">Map.prototype.delete()</a> </h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\">Map.prototype.delete()</a> </h3>\n\n<pre class='js'><code>\nconst mapObject = new Map();\nmyMap.set('bar', 'foo');\nconsole.log(myMap.delete('bar')); // Returns true. Successfully removed.\nconsole.log(myMap.has('bar')); // Returns false. The \"bar\" element is no longer present.\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\">Map.prototype.delete()</a> </h3>\n\n- Sử dụng <b  class='navy' >forEach</b> <b  class='red'>trong Algorithm</b> ",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\">Map.prototype.delete()</a> </h3>\n- The delete() method removes the specified element from a Map object by key. <br>\n- Return true if delete success, else return false. <br>\n- Phương thức delete dùng để remove element ra khỏi đối tượng Map thông qua đối số là key. <br>\n\n<!-- ==== Đặc tả ==== -->\n<br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.delete'>Map.prototype.delete(key)</a></h3>\n\n<!-- ==== Algorithm -->\n<pre class='js'><code>\n1. Let M be the this value. <br>\n2. Perform ? RequireInternalSlot(M, [[MapData]]). <br>\n3. Let entries be the List that is M.[[MapData]]. <br>\n4. For each Record { [[Key]], [[Value]] } p of entries, do. <br>\n🦊 a. If p.[[Key]] is not empty and SameValueZero(p.[[Key]], key) is true, then  <br>\n🦊🦊 i. Set p.[[Key]] to empty. <br>\n🦊🦊 ii. Set p.[[Value]] to empty. <br>\n🦊🦊 iii. Return true. <br>\n5. Return false. <br>\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete\" >Set.prototype.delete()</a></h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete\" >Set.prototype.delete()</a></h3>\n",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete\" >Set.prototype.delete()</a></h3>\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete\" >Set.prototype.delete()</a></h3>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\">Map.prototype.forEach()</a> </h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\">Map.prototype.forEach()</a> </h3>\n\n<pre class='js'><code>\n1 - caller.forEach(callbackFn, thisArg)\n2 - caller.forEach(function(value, key, map) { /* … */ }, thisArg)\n\nCallback is invoked with three arguments:\n- The entry's valueeach iteration.\n- The entry's key each iteration.\n- The Map object being traversed [caller before loops]\nThisArg is Value to use as this when executing callback.\n\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\">Map.prototype.forEach()</a> </h3>\n\n- Liên quan trực tiếp đến statement <b  class='red'>while</b> và built-in property <b class='blue'>size</b>",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\">Map.prototype.forEach()</a> </h3>\n- The forEach() method return <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a>. <br>\n- Phương thức forEach sau khi loop qua tất cả phần tử sẽ return <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a>\n\n<!-- ==== Đặc tả ==== -->\n\n<br><br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.foreach'>Map.prototype.forEach(callbackfn[,thisArg])</a></h3><br>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value.\n2. Perform ? RequireInternalSlot(M, [[MapData]]).\n3. If IsCallable(callbackfn) is false, throw a TypeError exception.\n4. Let entries be the List that is M.[[MapData]].\n5. Let numEntries be the number of elements of entries.\n6. Let index be 0.\n7. Repeat, while index < numEntries,\n🦊 a. Let e be the Record { [[Key]], [[Value]] } that is the value of entries[index].\n🦊 b. Set index to index + 1.\n🦊 c. If e.[[Key]] is not empty, then\n🦊🦊 i. Perform ? Call(callbackfn, thisArg, « e.[[Value]], e.[[Key]], M »).\n🦊🦊 ii. NOTE: The number of elements in entries may have increased during execution of callbackfn.\n🦊🦊 iii. Set numEntries to the number of elements of entries.\n8. Return undefined.\n</code></pre>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach\" >Set.prototype.forEach()</a></h3>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach\" >Set.prototype.forEach()</a></h3>\n",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach\" >Set.prototype.forEach()</a></h3>\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach\" >Set.prototype.forEach()</a></h3>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">Map.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">mapInstance[Symbol.iterator]()</a></h3>\n\n\n<b  class='red'>Giải thích iterator đi ehheeh</b>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">Map.prototype[@@iterator]()</a> </h3>\n\n<pre class='js'><code>\nconst mapObject = new Map();\nmapObject.set('0', 'foo');\nmapObject.set(1, 'bar');\nconst iterator1 = mapObject[Symbol.iterator]();\n\nfor (const item of iterator1) {\n  console.log(item);\n}\n// expected output: Array [\"0\", \"foo\"]\n// expected output: Array [1, \"bar\"]\n\nconsole.log(iterator1 .next().value); // [\"0\", \"foo\"]\nconsole.log(iterator1 .next().value); // [1, \"bar\"]\n\n\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">1. Map.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">2. Map.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">3. Map.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">4. Map.prototype.values()</a> </h3>\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">Map.prototype[@@iterator]()</a> </h3>\n\n- Map.prototype[Symbol.iterator](): Tuân theo \"implemented\" <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">Iterable Protocol</a>.<br>\n- Map.prototype[Symbol.iterator](): là một phương thức được xây dựng bên trong MapBase, trả về một <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">iterator object</a>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">Iterable Protocol</a></h3>\n- Iterable protocol là một giao thức lặp, Nó có thể được thực hiện \"implemented\" bởi bất kỳ object nào bằng cách tuân theo một số quy ước. <br>\n- There are two protocols: The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">iterable protocol</a> and the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterator_protocol\">iterator protocol</a>.<br>\n- Việc \"implemented\" các giao thức iterable protocol, giúp cho các instance của Map có thể sử dụng được hầu hết các phương thức duyệt qua mảng. Ví dụ như <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax</a> và <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\">For...Of</a>. <br>\n",
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\">Set.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\">setObject[Symbol.iterator]()</a></h3>\n\n\n<b  class='red'>Giải thích iterator đi ehheeh</b>\n\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\">Set.prototype[@@iterator]()</a> </h3>\n\n<pre class='js'><code>\nconst mapObject = new Map();\nmapObject.set('0', 'foo');\nmapObject.set(1, 'bar');\nconst iterator1 = mapObject[Symbol.iterator]();\n\nfor (const item of iterator1) {\n  console.log(item);\n}\n// expected output: Array [\"0\", \"foo\"]\n// expected output: Array [1, \"bar\"]\n\nconsole.log(iterator1 .next().value); // [\"0\", \"foo\"]\nconsole.log(iterator1 .next().value); // [1, \"bar\"]\n\n\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3 ><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\" style=\"color: navy\">1. Set.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\"  style=\"color: navy\">2. Set.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\"  style=\"color: navy\">3. Set.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\"  style=\"color: navy\">4. Set.prototype.values()</a> </h3>\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\">Set.prototype[@@iterator]()</a> </h3>\n\n- Set.prototype[Symbol.iterator](): Tuân theo \"implemented\" <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">Iterable Protocol</a>.<br>\n- Set.prototype[Symbol.iterator](): là một phương thức được xây dựng bên trong MapBase, trả về một <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">iterator object</a>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">Iterable Protocol</a></h3>\n- Iterable protocol là một giao thức lặp, Nó có thể được thực hiện \"implemented\" bởi bất kỳ object nào bằng cách tuân theo một số quy ước. <br>\n- There are two protocols: The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">iterable protocol</a> and the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterator_protocol\">iterator protocol</a>.<br>\n- Việc \"implemented\" các giao thức iterable protocol, giúp cho các instance của Map có thể sử dụng được hầu hết các phương thức duyệt qua mảng. Ví dụ như <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax</a> và <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\">For...Of</a>. <br>\n",
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">Map.prototype.entries()</a> </h3>\n\n\n<b  class='red'>Create Iterator</b>\n",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">Map.prototype.entries()</a> </h3>\n\n<pre class='js'><code>\nconst mapObject = new Map();\nmyMap.set('0', 'foo');\nmyMap.set(1, 'bar');\nmyMap.set({}, 'baz');\n\nconst mapIter = myMap.entries();\n\nconsole.log(mapIterator.next().value); // [\"0\", \"foo\"]\nconsole.log(mapIterator.next().value); // [1, \"bar\"]\nconsole.log(mapIterator.next().value); // [Object, \"baz\"]\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">1. Map.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">2. Map.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">3. Map.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">4. Map.prototype.values()</a> </h3>\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">Map.prototype.entries()</a> </h3>\n\n- The entries() method returns a new\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">iterator object</a>\n that contains the [key, value] <br>\n- Phương thức entries trả về một object iterator <br>\n<!-- ==== Đặc tả ==== -->\n\n<br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.entries'>Map.prototype.entries()</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value. <br>\n2. Return ? CreateMapIterator(M, key+value). <br>\nkey+value : is 1 element [key,value] in iterator object\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\" >Set.prototype.entries()</a></h3>\n\n<b  class='red'>Create Iterator</b>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\" >Set.prototype.entries()</a></h3>\n",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3 ><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\" style=\"color: navy\">1. Set.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\"  style=\"color: navy\">2. Set.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\"  style=\"color: navy\">3. Set.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\"  style=\"color: navy\">4. Set.prototype.values()</a> </h3>\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\" >Set.prototype.entries()</a></h3>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">Map.prototype.keys()</a> </h3>\n\n\n<b  class='red'>Create Iterator</b>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">Map.prototype.keys()</a> </h3>\n\n<pre class='js'><code>\nconst mapObject = new Map();\nmyMap.set(\"0\", \"foo\");\nmyMap.set(1, \"bar\");\nmyMap.set({}, \"baz\");\n\nconst mapIter = myMap.keys();\n\nconsole.log(mapIterator.next().value); // \"0\"\nconsole.log(mapIterator.next().value); // 1\nconsole.log(mapIterator.next().value); // {}\nconsole.log(mapIterator.next().value); // undefined\nconsole.log(mapIterator.next().value); // undefined\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">1. Map.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">2. Map.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">3. Map.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">4. Map.prototype.values()</a> </h3>\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">Map.prototype.keys()</a> </h3>\n\n- The keys() method returns a new\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">iterator object</a> \nthat contains the [key] <br>\n- Phương thức keys trả về một object iterator <br>\n\n<!-- ==== Đặc tả ==== -->\n\n<br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.keys'>Map.prototype.keys(key)</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value.\n2. Return ? CreateMapIterator(M, key).\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\" >Set.prototype.keys()</a></h3>\n\n\n<b  class='red'>Create Iterator</b>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\" >Set.prototype.keys()</a> <span  class='red'>Chính là </span> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></h3>\n\n<b  class='red'>Set Object just contains Value => Return Iterator Base on Values Instead Keys</b>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3 ><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\" style=\"color: navy\">1. Set.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\"  style=\"color: navy\">2. Set.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\"  style=\"color: navy\">3. Set.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\"  style=\"color: navy\">4. Set.prototype.values()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\" >Set.prototype.keys()</a> <span  class='red'>Chính là </span> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></h3>\n\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\" >Set.prototype.keys()</a> <span  class='red'>Chính là </span> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></h3>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">Map.prototype.values()</a> </h3>\n\n<b  class='red'>Create Iterator</b>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">Map.prototype.values()</a> </h3>\n\n<pre class='js'><code  class=\"javascript\">\nconst mapObject = new Map([ ['0', 'foo'], [1, 'bar'], [{}, 'baz'], [1, 'bar'], ]); \n// Map(3) {'0' => 'foo', 1 => 'bar', {…} => 'baz'}\nconst mapIterator = myMap.values(); // MapIterator {'foo', 'bar', 'baz'}\n\nconsole.log(mapIterator.next().value); // \"foo\"\nconsole.log(mapIterator.next().value); // \"bar\"\nconsole.log(mapIterator.next().value); // \"baz\"\nconsole.log(mapIterator.next().value); // undefined\nconsole.log(mapIterator.next().value); // undefined\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\">1. Map.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\">2. Map.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\">3. Map.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">4. Map.prototype.values()</a> </h3>\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\">Map.prototype.values()</a> </h3>\n\n- The values() method returns a new\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">iterator object</a> \nthat contains the [value] <br>\n- Phương thức values() trả về một object iterator <br>\n- <b  class='red'>Tạo ra Object Iterable Base on Values</b>\n<!-- ==== Đặc tả ==== -->\n\n<br><br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.values'>Map.prototype.values(key)</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let M be the this value.\n2. Return ? CreateMapIterator(M, value).\n</code></pre>",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ],
            [
                {
                    "name": "stt",
                    "data": "1",
                    "index": 0,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "method",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></h3>\n\n\n<b  class='red'>Create Iterator</b>",
                    "index": 1,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "syntax",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></h3>\n\n<pre class='js'><code  class=\"javascript\">\nconst setObject = new Set([42,\"fourty-two\",42,false]); //Set(3) {42, 'fourty-two', false}\nconst setIterator = setObject.values(); // SetIterator {42, 'fourty-two', false}\n\nconsole.log(setIterator.next().value); // 42\nconsole.log(setIterator.next().value); // \"fourty-two\"\nconsole.log(setIterator.next().value); // false\nconsole.log(setIterator.next().value); // undefined\n</code></pre>",
                    "index": 2,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "involved",
                    "data": "<h3 ><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\" style=\"color: navy\">1. Set.prototype[@@iterator]()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\"  style=\"color: navy\">2. Set.prototype.entries()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\"  style=\"color: navy\">3. Set.prototype.keys()</a> </h3>\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\"  style=\"color: navy\">4. Set.prototype.values()</a> </h3>\n\n\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\" >Set.prototype.keys()</a> <span  class='red'>Chính là </span> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></h3>\n\n",
                    "index": 3,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "description",
                    "data": "<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\" >Set.prototype.values()</a></h3>\n\n\n- The values() method returns a new\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\">iterator object</a> \nthat contains the [value] <br>\n- Phương thức values() trả về một object iterator <br>\n- <b  class='red'>Tạo ra Object Iterable Base on Values</b>\n\n<!-- ==== Đặc tả ==== -->\n\n<br><br>\n<h3  class='red'>Đặc Tả: <a href='https://tc39.es/ecma262/multipage/keyed-collections.html#sec-set.prototype.values'>Set.prototype.values(key)</a></h3>\n\n<!-- ==== Algorithm ==== -->\n<pre class='js'><code  class=\"javascript\">\n1. Let S be the this value.\n2. Return ? CreateMapIterator(S, value).\n</code></pre>\n",
                    "index": 4,
                    "show": [
                        "detail",
                        "home"
                    ]
                },
                {
                    "name": "action",
                    "data": null,
                    "index": 5,
                    "show": [
                        "default-home"
                    ]
                },
                {
                    "name": "note",
                    "data": null,
                    "index": 6,
                    "show": [
                        "detail"
                    ]
                }
            ]
        ]
    },
    "documentTitle": "Collections - JavaScript | Note",
    "HeadingOne": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects#keyed_collections\">Keyed Collections - Dictionary</a>",
    "headingMainTwo": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects#keyed_collections\">Keyed Collections - Dictionary</a>",
    "referanceContent": "<ol>\n    <li><a href=\"https://kungfutech.edu.vn/bai-viet/javascript/method-chaining-trong-javascript\">Giới thiệu Method Chainning</a></li>\n    <li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript\">Javascript on Mozilla</a></li>\n    <li><a href=\"https://stephengrider.github.io/JSPlaygrounds/\">Playgrounds</a></li>\n    <li><a href=\"https://sabe.io/classes/javascript/primitive-data-types/\">Style CSS</a></li>\n\n\n\n\n</ol>\n    "
}